<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Javas on Mr.哈利-南山不寒</title>
    <link>https://HarryQing.github.io/java/</link>
    <description>Recent content in Javas on Mr.哈利-南山不寒</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright>
    <lastBuildDate>Tue, 05 Jan 2021 14:14:00 +0800</lastBuildDate><atom:link href="https://HarryQing.github.io/java/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>第二章 数据类型和运算符</title>
      <link>https://HarryQing.github.io/java/%E7%AC%AC%E4%BA%8C%E7%AB%A0-%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E5%92%8C%E8%BF%90%E7%AE%97%E7%AC%A6/</link>
      <pubDate>Tue, 05 Jan 2021 14:14:00 +0800</pubDate>
      
      <guid>https://HarryQing.github.io/java/%E7%AC%AC%E4%BA%8C%E7%AB%A0-%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E5%92%8C%E8%BF%90%E7%AE%97%E7%AC%A6/</guid>
      <description>欲知后事如何，等着吧您！ </description>
    </item>
    
    <item>
      <title>1.8 30分钟完成桌球小游戏项目</title>
      <link>https://HarryQing.github.io/java/1.8-30%E5%88%86%E9%92%9F%E5%AE%8C%E6%88%90%E6%A1%8C%E7%90%83%E5%B0%8F%E6%B8%B8%E6%88%8F%E9%A1%B9%E7%9B%AE/</link>
      <pubDate>Tue, 05 Jan 2021 09:14:00 +0800</pubDate>
      
      <guid>https://HarryQing.github.io/java/1.8-30%E5%88%86%E9%92%9F%E5%AE%8C%E6%88%90%E6%A1%8C%E7%90%83%E5%B0%8F%E6%B8%B8%E6%88%8F%E9%A1%B9%E7%9B%AE/</guid>
      <description>如下的小项目，对于第一次接触编程的朋友从理解上会有难度。但是，我们这个项目不在于让大家理解代码本身，而是让大家“重在体验敲代码的感觉”。
【项目】桌球游戏小项目 练习目标： 1.找到敲代码的感觉
2.收获敲代码的兴趣
3.作出效果，找到自信
4.从一开始就学会调试错误
5.掌握Java代码基本结构
项目需求： 桌球在球桌中按照一定线路和角度移动，遇到边框会自动弹回。
要求： 即使看不太懂，也要照着敲如下游戏代码，至少5遍。要求所有字符和源文件一致。如果报异常，请细心看所在行和老师代码有何区别。现阶段不需要理解代码的语法功能，只要按照代码结构输入代码，能够经过调试实现代码的正常运行即可。
项目中用到的两个小图片，如下：
开发步骤： 版本1： 目标：创建项目、创建窗口。
创建项目并拷贝图片：
在项目名MyPro01上单击右键，在菜单中依次选择new&amp;mdash;Folder，创建一个名称是images的文件夹，并复制两 张图片到该目录下。并在src下创建类BallGame.java。eclipse下项目的最终结构如图所示。
代码：
import java.awt.*;import javax.swing.*;public class BallGame extends JFrame {//窗口加载void launchFrame(){setSize(300,300);setLocation(400,400);setVisible(true);}//main方法是程序执行的入口public static void main(String[] args){System.out.println(&amp;quot; 我是尚学堂高淇，这个游戏项目让大家体验编程的快感，寓教于乐！&amp;quot;);BallGame game = new BallGame();game.launchFrame();}} 运行效果：
版本2： 目标：加载两个图片
代码：
import java.awt.*;import javax.swing.*;public class BallGame extends JFrame {Image ball = Toolkit.</description>
    </item>
    
    <item>
      <title>1.7.3 使用eclipse开发和运行Java程序</title>
      <link>https://HarryQing.github.io/java/1.7.3-%E4%BD%BF%E7%94%A8eclipse%E5%BC%80%E5%8F%91%E5%92%8C%E8%BF%90%E8%A1%8Cjava%E7%A8%8B%E5%BA%8F/</link>
      <pubDate>Tue, 05 Jan 2021 05:20:00 +0800</pubDate>
      
      <guid>https://HarryQing.github.io/java/1.7.3-%E4%BD%BF%E7%94%A8eclipse%E5%BC%80%E5%8F%91%E5%92%8C%E8%BF%90%E8%A1%8Cjava%E7%A8%8B%E5%BA%8F/</guid>
      <description>·使用eclipse开发第一个程序 我们在上一节建好的Java项目中，开始开发Java程序。首先，新建一个Java类。在src目录上右键单击，建立一个Java类。如图1-32所示。
出现新建类的开始界面，如图所示。我们只需输入类名即可，其他不需做任何设置：
点击Finish后，新建Java类成功，出现如图所示
在src下面出现了Welcome.java文件。点击该文件后，出现该文件的代码编辑，我们开发Eclipse下的第一个Java程序。
【示例1-2】使用eclipse开发Java程序
public class Welcome {public static void main(String[] args) {System.out.println(&amp;quot;我是尚学堂的高淇！&amp;quot;);}} 运行该程序： 在代码上单击右键后，点击Run as Java application。如图所示。也可以使用快捷键“ctrl+F11”，直接实现运行。或者直接点击工具栏的中运行按钮。
界面下方的控制台（console）出现运行结果，如图所示。
至此，我们成功在eclipse中开发了我们的第一个Java程序！
·eclipse自动编译 eclipse会自动执行javac进行编译，并且会将编译错误直接给出提示，一目了然，非常便于我们调试。
·Java项目的src目录和bin目录 src用于存放源代码，bin用于存放生成的class文件。
在eclipse视图里我们只看到了src目录，eclipse隐藏了bin目录。进入我的电脑，打开Java项目目录，我们可以看到src和bin目录：</description>
    </item>
    
    <item>
      <title>1.7.2 在eclipse中创建Java项目</title>
      <link>https://HarryQing.github.io/java/1.7.2-%E5%9C%A8eclipse%E4%B8%AD%E5%88%9B%E5%BB%BAjava%E9%A1%B9%E7%9B%AE/</link>
      <pubDate>Mon, 04 Jan 2021 22:14:00 +0800</pubDate>
      
      <guid>https://HarryQing.github.io/java/1.7.2-%E5%9C%A8eclipse%E4%B8%AD%E5%88%9B%E5%BB%BAjava%E9%A1%B9%E7%9B%AE/</guid>
      <description>在界面左侧的“Package Explorer”视图中右键单击，在快捷菜单中依次选择new——&amp;gt; Java Project，开始新建Java项目。如图所示。 输入项目名称MyPro01，点击Finish 完成即可。如图所示。
新建项目完成，项目结构如图所示。其中的src文件夹用于存放源代码。显示JDK版本是JavaSE-1.8。</description>
    </item>
    
    <item>
      <title>1.7.1 下载和安装eclipse</title>
      <link>https://HarryQing.github.io/java/1.7.1-%E4%B8%8B%E8%BD%BD%E5%92%8C%E5%AE%89%E8%A3%85eclipse/</link>
      <pubDate>Mon, 04 Jan 2021 18:14:00 +0800</pubDate>
      
      <guid>https://HarryQing.github.io/java/1.7.1-%E4%B8%8B%E8%BD%BD%E5%92%8C%E5%AE%89%E8%A3%85eclipse/</guid>
      <description>下载地址：https://www.eclipse.org/downloads/packages/
出现图所示下载界面。选择Eclipse IDE for Java Developers，根据自己安装的JDK, 决定是下载32位还是64位。下载完成后，直接解压。进入目录，双击eclipse.exe即可使用。
启动时会先出现设置工作空间界面，如图所示。工作空间指Java项目存储的目录，一般采用默认工作空间目录即可。
点击OK后，会进入欢迎界面，如图所示。
关闭欢迎界面，即可进入开发主界面，如图所示。</description>
    </item>
    
    <item>
      <title>1.7 eclipse使用10分钟入门</title>
      <link>https://HarryQing.github.io/java/1.7-eclipse%E4%BD%BF%E7%94%A810%E5%88%86%E9%92%9F%E5%85%A5%E9%97%A8/</link>
      <pubDate>Mon, 04 Jan 2021 13:14:00 +0800</pubDate>
      
      <guid>https://HarryQing.github.io/java/1.7-eclipse%E4%BD%BF%E7%94%A810%E5%88%86%E9%92%9F%E5%85%A5%E9%97%A8/</guid>
      <description>在开发工具匮乏的年代，第一代Java程序员都是从文本编辑器开始训练自己的代码，从而一步步成为高手，这是一种无奈，而不是一种必须。
我们认为，现在横在入门初学者最大的障碍在于“是否能激发兴趣，解决问题，体验到编程的快乐”，而不是讨论是该用记事本还是eclipse集成开发环境。
是否使用或坚持记事本编程不是成为高手的必要条件，而“激发兴趣，保持兴趣”确是成为高手的必要条件。也基于我们的理念“快速入门，快速实战”，我们一开始就引入eclipse，让初学者更容易的激发兴趣，体验学习的快乐。</description>
    </item>
    
    <item>
      <title>1.6 常用Java开发工具</title>
      <link>https://HarryQing.github.io/java/1.6-%E5%B8%B8%E7%94%A8java%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/</link>
      <pubDate>Mon, 04 Jan 2021 09:14:00 +0800</pubDate>
      
      <guid>https://HarryQing.github.io/java/1.6-%E5%B8%B8%E7%94%A8java%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/</guid>
      <description>入门学习时，进行简单的Java程序编写，我们可以使用文本编辑器，比如：记事本。但是，记事本功能不够强大，我们可以考虑使用“更加强大的记事本”，常见的有如下三种软件：
1.Notepad++
2.UltraEdit
3.EditPlus
在我们真正学习开发中，包括以后在企业中从事软件开发时，一般使用集成开发环境（IDE）， 如下三种软件是最常见的，尤其是eclipse。 我们只选一个作为入门使用，其他两种大家自行举一反三，使用很简单。
eclipse官方网址：http://www.eclipse.org
IntelliJ IDE官方网址:http://www.jetbrains.com/idea/
NetBeans 官方网址：https://netbeans.org/</description>
    </item>
    
    <item>
      <title>1.5.4 最常用DOS命令</title>
      <link>https://HarryQing.github.io/java/1.5.4-%E6%9C%80%E5%B8%B8%E7%94%A8dos%E5%91%BD%E4%BB%A4/</link>
      <pubDate>Mon, 04 Jan 2021 05:20:00 +0800</pubDate>
      
      <guid>https://HarryQing.github.io/java/1.5.4-%E6%9C%80%E5%B8%B8%E7%94%A8dos%E5%91%BD%E4%BB%A4/</guid>
      <description>DOS命令已经基本退出普通使用者的历史舞台了，但是仍然有必要掌握几个常用的命令，便于在某些情况下更顺畅的操作程序。
1.cd 目录路径	进入一个目录
2.cd ..	进入父目录
3.dir	查看本目录下的文件和子目录列表
4.cls 清楚屏幕命令
5.上下键	查找敲过的命令
6.Tab键	自动补齐命令</description>
    </item>
    
    <item>
      <title>1.5.3 第一个Java程序的总结和提升</title>
      <link>https://HarryQing.github.io/java/1.5.3-%E7%AC%AC%E4%B8%80%E4%B8%AAjava%E7%A8%8B%E5%BA%8F%E7%9A%84%E6%80%BB%E7%BB%93%E5%92%8C%E6%8F%90%E5%8D%87/</link>
      <pubDate>Sun, 03 Jan 2021 21:00:00 +0800</pubDate>
      
      <guid>https://HarryQing.github.io/java/1.5.3-%E7%AC%AC%E4%B8%80%E4%B8%AAjava%E7%A8%8B%E5%BA%8F%E7%9A%84%E6%80%BB%E7%BB%93%E5%92%8C%E6%8F%90%E5%8D%87/</guid>
      <description>1.Java对大小写敏感，如果出现了大小写拼写错误，程序无法运行。
2.关键字public被称作访问修饰符(access modifier)，用于控制程序的其它部分对这段代码的访问级别。
3.关键字class 的意思是类。Java是面向对象的语言，所有代码必须位于类里面。
4.一个源文件中至多只能声明一个public的类，其它类的个数不限，如果源文件中包含一个public 类，源文件名必须和其中定义的public的类名相同，且以“.java”为扩展名。
5.一个源文件可以包含多个类class。
6.正确编译后的源文件，会得到相应的字节码文件，编译器为每个类生成独立的字节码文件，且将字节码文件自动命名为类的名字且以“.class”为扩展名。
7.main方法是Java应用程序的入口方法，它有固定的书写格式：
8.public static void main(String[] args) {…}
9.在Java中，用花括号划分程序的各个部分，任何方法的代码都必须以“{”开始，以“}”结束， 由于编译器忽略空格，所以花括号风格不受限制。
10.Java中每个语句必须以分号结束，回车不是语句的结束标志，所以一个语句可以跨多行。
老鸟建议： ·编程时，一定要注意缩进规范；
·在写括号、引号时，一定是成对编写，然后再往里插入内容。</description>
    </item>
    
    <item>
      <title>1.5.2 第一个程序常见错误</title>
      <link>https://HarryQing.github.io/java/1.5.2-%E7%AC%AC%E4%B8%80%E4%B8%AA%E7%A8%8B%E5%BA%8F%E5%B8%B8%E8%A7%81%E9%94%99%E8%AF%AF/</link>
      <pubDate>Sun, 03 Jan 2021 18:00:00 +0800</pubDate>
      
      <guid>https://HarryQing.github.io/java/1.5.2-%E7%AC%AC%E4%B8%80%E4%B8%AA%E7%A8%8B%E5%BA%8F%E5%B8%B8%E8%A7%81%E9%94%99%E8%AF%AF/</guid>
      <description>·常见问题-1：提示“javac不是内部或外部命令……” 出错原因：Path变量配置错误导致没有找到javac命令
解决方案：参考1.4.2 &amp;lt;环境变量Path的配置&amp;gt;，细心重新设置Path，配置完成后需要重新输入cmd打开命令行窗口。
·常见问题-2：文件夹中可以看到Welcome.java文件，在编译时出现’javac 找不到文件……’ 出错原因：可能是操作系统显示设置的问题，隐藏了文件的扩展名。
解决方案：打开我的电脑窗口,选择【组织】【文件夹和搜索选项】【查看】，如图1-24所示，去掉“隐藏已知文件夹类型的扩展名”复选框中的对勾，看到文件的实际名称为Welcome.java.txt，将后缀后.txt去掉。
·常见问题-3：NoSuchMethodError：main 出错原因：找不到main方法，应该是main方法书写有误。
解决方案：检查public static void main(String [] args){}是否有误。</description>
    </item>
    
  </channel>
</rss>
