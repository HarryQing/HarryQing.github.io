<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Blogs on Mr.哈利-未来可期</title>
    <link>https://HarryQing.github.io/blogs/</link>
    <description>Recent content in Blogs on Mr.哈利-未来可期</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright>
    <lastBuildDate>Wed, 29 Sep 2021 11:15:00 +0800</lastBuildDate><atom:link href="https://HarryQing.github.io/blogs/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Hadoop完全分布式配置</title>
      <link>https://HarryQing.github.io/blogs/hadoop%E9%83%A8%E7%BD%B2/</link>
      <pubDate>Wed, 29 Sep 2021 11:15:00 +0800</pubDate>
      
      <guid>https://HarryQing.github.io/blogs/hadoop%E9%83%A8%E7%BD%B2/</guid>
      <description>前期准备 1.三台Centos7虚拟机 CentOS-7-x86_64-DVD-1511.iso下载 2.下载jdk，Hadoop，Zookeeper 3.第一台 虚拟机根目录的home文件夹中创建Java和software文件夹 4.Java中加入jdk；software中添加Hadoop，Zookeeper压缩包 Hadoop完全分布式配置步骤详解 1. 关闭防火墙 systemctl stop firewalld 2.改变主机名 vim /etc/sysconfig/network 重新生效
source /etc/sysconfig/network 3. 将ip和主机名进行映射 vim /etc/hosts 主机IP地址 主机名 例如：
192.168.202.130 hadoop01 192.168.202.131 hadoop02 192.168.202.132 hadoop03 注意：三个节点都如此不再符截图 注意：三个节点在映射完成之后的内容应该是一模一样的
4. 重启 reboot 5. 三个节点之间需要进行免密互通 ssh-keygen ssh-copy-id root@hadoop01 ssh-copy-id root@hadoop02 ssh-copy-id root@hadoop03 验证：在任意一个节点上能够免密登录其他两个节点
ssh hadoop01 ssh hadoop02 ssh hadoop03 如果免密成功，则输入logout回到当前节点的命令界面
6. 如果已经配置了Hadoop伪分布式,将其备份,即 将第一个节点的伪分布式重新命名 mv hadoop-2.7.1 hadoop-alone 7. 解压安装包 tar -xvf hadoop-2.7.1_64bit.tar.gz 8. 进入hadoop安装目录的etc/hadoop目录 cd /home/software/hadoop-2.7.1/etc/hadoop/ 9. 编辑hadoop-env.</description>
    </item>
    
    <item>
      <title>linux系统shell终端下载报错——“Ubuntu 20.04 LTS _Focal Fossa - Release amd64 (20200423)” 的盘片插入驱动器“/cdrom/”再按「回车」键</title>
      <link>https://HarryQing.github.io/blogs/linux%E7%B3%BB%E7%BB%9Fshell%E7%BB%88%E7%AB%AF%E4%B8%8B%E8%BD%BD%E6%8A%A5%E9%94%99ubuntu-20.04-lts-_focal-fossa-release-amd64-20200423-%E7%9A%84%E7%9B%98%E7%89%87%E6%8F%92%E5%85%A5%E9%A9%B1%E5%8A%A8%E5%99%A8%E5%86%8D%E6%8C%89%E5%9B%9E%E8%BD%A6%E9%94%AE/</link>
      <pubDate>Tue, 30 Mar 2021 22:20:00 +0800</pubDate>
      
      <guid>https://HarryQing.github.io/blogs/linux%E7%B3%BB%E7%BB%9Fshell%E7%BB%88%E7%AB%AF%E4%B8%8B%E8%BD%BD%E6%8A%A5%E9%94%99ubuntu-20.04-lts-_focal-fossa-release-amd64-20200423-%E7%9A%84%E7%9B%98%E7%89%87%E6%8F%92%E5%85%A5%E9%A9%B1%E5%8A%A8%E5%99%A8%E5%86%8D%E6%8C%89%E5%9B%9E%E8%BD%A6%E9%94%AE/</guid>
      <description>“Ubuntu 20.04 LTS _Focal Fossa - Release amd64 (20200423)” 的盘片插入驱动器“/cdrom/”再按「回车」键&amp;quot;
首先：cd /etc/apt打开编辑sources.list： sudo nano source.list注释掉deb cdrom:开头的行ctrl+O写入，ctrl+X离开然后执行命令sudo apt-get update</description>
    </item>
    
    <item>
      <title>chmod 777 到底是啥 ???看完这个你就完全懂了！</title>
      <link>https://HarryQing.github.io/blogs/chmod-777-%E5%88%B0%E5%BA%95%E6%98%AF%E5%95%A5-%E7%9C%8B%E5%AE%8C%E8%BF%99%E4%B8%AA%E4%BD%A0%E5%B0%B1%E5%AE%8C%E5%85%A8%E6%87%82%E4%BA%86/</link>
      <pubDate>Tue, 23 Mar 2021 23:11:00 +0800</pubDate>
      
      <guid>https://HarryQing.github.io/blogs/chmod-777-%E5%88%B0%E5%BA%95%E6%98%AF%E5%95%A5-%E7%9C%8B%E5%AE%8C%E8%BF%99%E4%B8%AA%E4%BD%A0%E5%B0%B1%E5%AE%8C%E5%85%A8%E6%87%82%E4%BA%86/</guid>
      <description>王雪庆
Linux
0X00 前言 可能对于Linux新手而言，很不解的一件事就是： 有时在访问文件xxx时，总是出现权限问题，但是上网一查，大佬们直接一句话： chmod 777 xxx 完事！ 相信你当时的心情是这样的：
我勒个神奇 然后之后遇到权限就照葫芦画瓢的chmod 777，也算是美滋滋。 不过，作为一个打破砂锅的程序猿怎么能就知道chmod 777！ 当然提到chmod，我们一定先说清楚Linux的用户管理
0X01 Linux用户与群组 1、用户 我们知道，Linux有一个超级用户——root，它就是整个Linux系统的完全掌控者啊，只要root想做就没有root不能做的。 因此为了安全性等种种考虑，Linux设计者设计了普通用户，比如刚安装Linux的时候会创建一个用户就是一个普通用户(假设叫 j )，当然你可以用adduser指令来增添一个新的用户(当然需要超级权限)：
sudo adduser rjs此时就Linux就有了root，j，rjz三个用户，其中root是超级用户，j和rjs都是普通用户
2、群组 既然有了许多的用户就有了群组的概念，因为你认知的人多了，也就自然而然的分组了，有的是家人，有的是朋友，有的是同学等等。家人，朋友，同学就是群组：
有了用户和群组的概念，接下来就能好好讲权限问题了
0X01 Linux文件权限 1、权限描述 既然有了用户之分，那么一个用户(比如： j)创建的文件一般来讲就不会给其它用户（比如：rjs）随便篡改，也就是不能给其他人写（w），当然看看（r）还是可以的，也不用那么小气对吧23333 所以Linux的对于同一个文件，不同的用户是有不同的权限的，权限分别有：读( r)，写(w)，运行(x)
我们可以采用 ls -l 命令来查看文件权限：
ls	-l会得到如下信息：
可以看到，本目录下有一个文件夹：Tencent Files 一个文档：wget-log 每一个文件(文件夹)前都有这样的描述： drwxr-xr-x -rwx&amp;mdash;&amp;mdash;- 这就是文件的对于用户的权限！ 那这是什么意思呢？且往下看
2、文件权限 上面的描述中一共有10位，其中第一位表示文件的属性： d：表示是一个文件夹 l：表示是一个链接 -：表示是一个普通的文件 注意：这是第一位和后面的不一样
后面的就是我们的今天的主角——权限描述了。 可以看到是一串的 读( r)、写(w)、运行(x) 组成了，那为什么一排有好多个重复出现的 r、w 和 x 呢？ 那是因为访问权限是按照用户划分的：
也就是说，从第2位开始，每三位分别表示 文件所有者、群组用户、其他用户 的权限 比如： drwxr-xr-x 表示文件夹 Tencent Files 对于所有者 j 是 可读可写可执行的(rwx)，而对于在同一个群组中的用户是 可写不可读可执行 的(r-x)，对于其他用户也是 可写不可读可执行 的(r-x) 有了这个，我们的今天的主角——chmod 终于要登场了！</description>
    </item>
    
    <item>
      <title>Linux该如何学习（新手入门必看）</title>
      <link>https://HarryQing.github.io/blogs/linux%E8%AF%A5%E5%A6%82%E4%BD%95%E5%AD%A6%E4%B9%A0%E6%96%B0%E6%89%8B%E5%85%A5%E9%97%A8%E5%BF%85%E7%9C%8B/</link>
      <pubDate>Mon, 01 Mar 2021 17:15:00 +0800</pubDate>
      
      <guid>https://HarryQing.github.io/blogs/linux%E8%AF%A5%E5%A6%82%E4%BD%95%E5%AD%A6%E4%B9%A0%E6%96%B0%E6%89%8B%E5%85%A5%E9%97%A8%E5%BF%85%E7%9C%8B/</guid>
      <description>如何去学习 　学习大多类似庖丁解牛，对事物的认识一般都是由浅入深、由表及里的过程，循序才能渐进。学习 Linux 同样要有一定的顺序和方法，当然这也是你学习本教程的意义。如果你是初学者，那么建议按照本教程的顺序阅读，不要跳跃，欲速则不达，揠苗也不见得能助长。
　另外，强烈建议做好读书笔记，边看边记，边练习边思考，“学而不思则罔，思而不学则殆”，比勤奋更重要的是思考的能力，不要傻学、死学。养成看书的好习惯，学习类的图书如果没能看成自己知识的积累，就是白读。一本书，可能看一遍是不够的，多次阅读，反复实践，才能印象深刻。实践是检验真理的唯一标准，实践出真知。
　方法有了，贵在坚持。制定好自己的学习目标，设定奖惩，确定详细的时间进度表，开始行动！保持热情，坚定目标，做好计划，希望你、不会让本教程变成你的收藏品，而是成为一套可能会改变你职场命运的技术指导教程，那将是我们最大的荣幸。
碰到问题怎么办 　任何人学习和使用 Linux 或多或少会遇到问题，很多人遇到问题的第一个念头就是问人。没错！这可以快速解决问题。但是我们建议你，先尝试自己解决问题，询问别人获得答案固然好，但是对于知识的积累和提升解决问题的能力并没有帮助，不要做依赖别人帮助的懒虫。
　在寻找答案的过程中，虽然会花费很多时间，也可能会遇到挫折，但久而久之你会发现，也许为了找一个问题的解答，你了解了 Linux 很多相关的知识，经验也越来越丰富。记住，你不可能永远有人问，也不可能永远有人愿意回答你。
　Linux 系统的一个非常大的好处是，当命令执行错误或系统设置错误时，通常会清楚地显示错误信息，告诉你哪里出错了，只要认真观察报错信息，大概就知道问题出现在哪里，应该如何解决了。有的操作步骤复杂，出现状况时，回头检査一下，是不是前面步骤的命令敲错或配置文件改错。
　Linux 的帮助文档是很好的工具，命令的选项、配置文件的设置都可以从这里找到答案；我们在提问前，一定要先在网络上寻找答案，借用一句广告语&amp;quot;百度一下，你就知道&amp;quot;，没有人愿意回答网上一搜就可以找到答案的问题。
　提问时，确认你已经做了上述事情，这有助于树立你不是寄生虫与浪费别人时间的形象。轻率的提问只能得到轻率的回答，或者压根儿没人理你。
　有的被询问者常常不是很清楚初学者要问什么，因为初学者没有完整、清楚地描述问题。在求助他人时，说明要做什么、做了什么，列出完整的操作步骤、错误信息或错误截图，描述清晰，让别人能看懂你的问题，否则笔者就算变成超人也帮不了你。
　在请教问题时，要注意礼貌。很多年轻人，多了一点理所应当，少了一些礼貌用语，你自然会感到世态炎凉，技术圈子没有人性，毕竟人家不回答你是本分，回答你是人情。
　另外，千万不要问那种令人头疼的问题，如 Linux 怎么备份、Linux 权限有明陛、xx 服务怎么配置、oo 脚本帮写一个……你问饺子皮为什么这么擀会破，我可以告诉你；你问怎么包饺子，这就是你找茬儿了，先在网上找找，人生苦短，快用百度，然后照猫画虎时哪个步骤有问题你再问……
　提问，也是一种智慧。
英文读不懂怎么办 　每次在教授 Linux 课程时，笔者都要给读者介绍两个英文短语，一个是 &amp;ldquo;No such file or directory&amp;rdquo;，另一个是 &amp;ldquo;command not found&amp;rdquo;。初学者在学习命令时问得最多的就是这两个问题：输入的文件或目录名称错误、命令没有被发现（命令敲错了）。
　能看懂 Linux 的英文提示及英文文档非常重要。其实计算机英语很简单，只要熟记了计算机专业英语单词，高中毕业的英文水平就可以轻松阅读英文文档了。即便你的英文水平实在太差了，连最简单的计算机英文文档都看不懂，那么在学习 Linux 的同时学学英语，每天从背一定量的单词开始吧！
　笔者给各位读者的建议是每天背 30 个在电脑上看到的不认识的单词，30 个单词不需要你会读、会写、会念，看到单词知道意思即可，一般 3~5 个月，常见的计算机英语都能看厪。
忘记Windows的思维方式 　思想的转变比暂时性的技术提高更重要，因为它能帮助你加快学习速度。很多人使用 Linux 时骨子里却还是 Windows 的思想，比如讲 Linux 安装都会有读者问：“是把 Linux 装在 C 盘吗？”，可见被 Windows“毒害”之深。Windows 是一个优秀的系统，它的易用性非常好，不过也正是因为易用性好，使用者往往不了解自己所做操作的原理。</description>
    </item>
    
    <item>
      <title>国内加速访问 GitHub</title>
      <link>https://HarryQing.github.io/blogs/%E5%9B%BD%E5%86%85%E5%8A%A0%E9%80%9F%E8%AE%BF%E9%97%AE-github/</link>
      <pubDate>Fri, 25 Dec 2020 11:36:33 +0800</pubDate>
      
      <guid>https://HarryQing.github.io/blogs/%E5%9B%BD%E5%86%85%E5%8A%A0%E9%80%9F%E8%AE%BF%E9%97%AE-github/</guid>
      <description>一，国内加速访问 GitHub 中国访问 GitHub 的速度不忍直视，那就叫一个慢！
 Q: 为什么访问速度会很慢？
A: GitHub 在国内访问速度慢的问题原因有很多，但最直接和最主要的原因是 GitHub 的分发加速网络的域名遭到 dns 污染。
  Q: 如何解决 DNS 污染？
A: 通过修改 hosts 解决污染问题。
  二，解决方法  不需要科（）学（）上网，也不需要开代理加速器。
 1.查询网址对应的 IP 地址 查询地址： https://www.ipaddress.com/ 
点击下面 域名（domain）自动跳转到 ipaddress.com 查询结果页面：
（1）github.com （2）assets-cdn.github.com （3）github.global.ssl.fastly.net 2.修改本地系统 hosts 文件  hosts 文件路径：C:\Windows\System32\drivers\etc\hosts
 以管理员身份打开 CMD 终端，并输入 notepad ，会打开一个记事本。 打开文件，输入 hosts 文件路径，选择所有文件，最后点击 hosts 自动打开该文件。 修改 hosts 文件，将查询到的 IP 和 域名写在 hosts 文件的最后即可  192.</description>
    </item>
    
    <item>
      <title>SQL Server 2008 R2 安装教程</title>
      <link>https://HarryQing.github.io/blogs/sql-server-2008-r2-%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/</link>
      <pubDate>Fri, 27 Nov 2020 06:06:06 +0800</pubDate>
      
      <guid>https://HarryQing.github.io/blogs/sql-server-2008-r2-%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/</guid>
      <description>SQL Server 2008 R2 安装资源  链接: https://pan.baidu.com/s/193h2Bw3wpX2-g1ew4pzfig 
提取码: x4eb
 安装步骤：  注意：安装过程需要电脑连接网络，中途不能断网。
 1.首先双击下载好的安装文件setup.exe，打开安装包 2.然后点击左侧栏目“安装” 3.点击如图的“全新安装或向现有安装添加功能”按钮 4.接下来勾选我接受许可条款，然后进入下一步 5.选择输入产品密钥，并输入密钥。密钥会自动填入，如果没有自动填入则需要手动输入。密钥：JD8Y6-MQG69-P9M84-XDTPG-34MBB。输入好后。点击“下一步”  sql server 2008 密钥
developer PTTFM-X467G-P7RH2-3Q6CG-4DMYB
enterprise JD8Y6-HQG69-P9H84-XDTPG-34MBB
 6.然后点击安装 7.选中默认sql server 功能安装，并点击下一步 8.点击全选按钮并点击下一步 9.等待一分钟左右 10.如果目录需要修改可以更改下其他路径，然后点击下一步 11.出现如图信息，接着下一步操作 12. 如图修改下账户名，然后点击下一步  13.输入密码和确认密码，点击“添加当前用户”按钮（密码可以不用） 14.数据目录默认保存在c盘，建议修改保存目标路径，点击下一步 15.出现如同信息，接着往下操作  16.点击下一步 17.然后继续往下操作 18.点击安装 19.然后会显示正在安装中 20.安装完成就可以直接使用了 21.点击“开始”图标。找到“SQL Server Man…….“点击运行  SQL Server 2008 R2 到这里就安装结束了喔 （假如你命硬，电脑不克你的情况下）！！！ 下一期我会举一些下载过程中可能遇到的阻碍 </description>
    </item>
    
    <item>
      <title>Sqlsever 2008安装时出现“重启计算机”问题</title>
      <link>https://HarryQing.github.io/blogs/sqlsever-2008%E5%AE%89%E8%A3%85%E6%97%B6%E5%87%BA%E7%8E%B0%E9%87%8D%E5%90%AF%E8%AE%A1%E7%AE%97%E6%9C%BA%E9%97%AE%E9%A2%98/</link>
      <pubDate>Sun, 08 Nov 2020 23:06:06 +0800</pubDate>
      
      <guid>https://HarryQing.github.io/blogs/sqlsever-2008%E5%AE%89%E8%A3%85%E6%97%B6%E5%87%BA%E7%8E%B0%E9%87%8D%E5%90%AF%E8%AE%A1%E7%AE%97%E6%9C%BA%E9%97%AE%E9%A2%98/</guid>
      <description> 笔者最近在帮助小伙伴们安装SqlServer 2008时遇到了好几个“重启计算机”问题（详细如下图），通过一番查找和探索终于是解决了这个问题，现在把方法分享给大家。
 操作方法 1.第一步  在开始菜单中找到运行，如下图，在打开中，输入“regedit”，按回车，打开注册表编辑器，如第二步。
 2.第二步  在打开的注册表编辑器中按照下图红色方框标记的路径对应的找到 HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Session Manager这个文件夹
 3.第三步  在上面找到的Session Manager上单击，右边窗口出现一系列注册表，在这些注册表中找到 PendingFileRenameOperations这个注册表，右击鼠标，选择删除。然后再点击SqlServer的安装文件，进行安装，你就会发现，上面的问题已经解决了。
 结束了喔，快不快！！！ </description>
    </item>
    
  </channel>
</rss>
